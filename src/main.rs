// # Basic Example
//
// This example covers the basic functionalities of
// tantivy.
//
// We will :
// - define our schema
// - create an index in a directory
// - index a few documents into our index
// - search for the best document matching a basic query
// - retrieve the best document's original content.

// ---
// Importing tantivy...
use tantivy::collector::TopDocs;
use tantivy::query::QueryParser;
use tantivy::{schema::*, directory};
use tantivy::{doc, Index, ReloadPolicy};
use tempfile::TempDir;

mod hashmap_directory;

use hashmap_directory::HashMapDirectory;

fn main() -> tantivy::Result<()> {

    // let virtual_directory = HashMapDirectory::new();

    // # Defining the schema
    //
    // The Tantivy index requires a very strict schema.
    // The schema declares which fields are in the index,
    // and for each field, its type and "the way it should
    // be indexed".

    // First we need to define a schema ...
    let mut schema_builder = Schema::builder();

    // Our first field is title.
    // We want full-text search for it, and we also want
    // to be able to retrieve the document after the search.
    //
    // `TEXT | STORED` is some syntactic sugar to describe
    // that.
    //
    // `TEXT` means the field should be tokenized and indexed,
    // along with its term frequency and term positions.
    //
    // `STORED` means that the field will also be saved
    // in a compressed, row-oriented key-value store.
    // This store is useful for reconstructing the
    // documents that were selected during the search phase.
    schema_builder.add_text_field("title", TEXT | STORED);

    // Our second field is body.
    // We want full-text search for it, but we do not
    // need to be able to be able to retrieve it
    // for our application.
    //
    // We can make our index lighter by omitting the `STORED` flag.
    schema_builder.add_text_field("body", TEXT);

    let schema = schema_builder.build();

    // // # Indexing documents
    // //
    // // Let's create a brand new index.
    // //
    // // This will actually just save a meta.json
    // // with our schema in the directory.

    // let index = Index::builder().schema(schema.clone()).open_or_create(virtual_directory.clone()).unwrap();

    // // To insert a document we will need an index writer.
    // // There must be only one writer at a time.
    // // This single `IndexWriter` is already
    // // multithreaded.
    // //
    // // Here we give tantivy a budget of `50MB`.
    // // Using a bigger heap for the indexer may increase
    // // throughput, but 50 MB is already plenty.
    // let mut index_writer = index.writer(50_000_000)?;

    // // Let's index our documents!
    // // We first need a handle on the title and the body field.

    // // ### Adding documents
    // //
    // // We can create a document manually, by setting the fields
    // // one by one in a Document object.
    let title = schema.get_field("title").unwrap();
    let body = schema.get_field("body").unwrap();

    // let mut old_man_doc = Document::default();
    // old_man_doc.add_text(title, "The Old Man and the Sea");
    // old_man_doc.add_text(
    //     body,
    //     "He was an old man who fished alone in a skiff in the Gulf Stream and \
    //      he had gone eighty-four days now without taking a fish.",
    // );

    // // ... and add it to the `IndexWriter`.
    // index_writer.add_document(old_man_doc);

    // // For convenience, tantivy also comes with a macro to
    // // reduce the boilerplate above.
    // index_writer.add_document(doc!(
    // title => "Of Mice and Men",
    // body => "A few miles south of Soledad, the Salinas River drops in close to the hillside \
    //         bank and runs deep and green. The water is warm too, for it has slipped twinkling \
    //         over the yellow sands in the sunlight before reaching the narrow pool. On one \
    //         side of the river the golden foothill slopes curve up to the strong and rocky \
    //         Gabilan Mountains, but on the valley side the water is lined with trees—willows \
    //         fresh and green with every spring, carrying in their lower leaf junctures the \
    //         debris of the winter’s flooding; and sycamores with mottled, white, recumbent \
    //         limbs and branches that arch over the pool"
    // ));

    // // Multivalued field just need to be repeated.
    // index_writer.add_document(doc!(
    // title => "Frankenstein",
    // title => "The Modern Prometheus",
    // body => "You will rejoice to hear that no disaster has accompanied the commencement of an \
    //          enterprise which you have regarded with such evil forebodings.  I arrived here \
    //          yesterday, and my first task is to assure my dear sister of my welfare and \
    //          increasing confidence in the success of my undertaking."
    // ));

    // // This is an example, so we will only index 3 documents
    // // here. You can check out tantivy's tutorial to index
    // // the English wikipedia. Tantivy's indexing is rather fast.
    // // Indexing 5 million articles of the English wikipedia takes
    // // around 3 minutes on my computer!

    // // ### Committing
    // //
    // // At this point our documents are not searchable.
    // //
    // //
    // // We need to call `.commit()` explicitly to force the
    // // `index_writer` to finish processing the documents in the queue,
    // // flush the current index to the disk, and advertise
    // // the existence of new documents.
    // //
    // // This call is blocking.
    // index_writer.commit()?;

    // let serialized_directory = serde_json::to_string(&virtual_directory).unwrap();

    // dbg!(format!("{serialized_directory}"));

    let serialized_directory = "{\"ac92a3a0447f46c1a33c8dd4dec431b0.term\":[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,146,203,0,16,139,197,6,16,143,0,16,133,194,0,16,130,206,4,3,2,1,0,1,5,9,12,16,116,115,111,109,97,17,5,5,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,4,34,137,154,69,172,11,61,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,130,203,196,0,1,0,100,17,65,0,2,1,1,7,110,108,17,66,0,16,134,221,197,0,16,157,193,206,215,200,0,16,146,0,1,1,101,17,65,206,198,0,16,135,211,2,0,1,5,111,105,17,2,0,16,155,207,1,0,1,56,117,111,17,2,1,0,0,33,101,97,17,2,0,16,139,197,0,16,140,196,49,16,143,29,16,155,200,0,16,144,197,194,199,1,0,1,7,116,107,17,2,0,16,151,203,200,231,1,0,108,1,104,97,17,2,0,16,132,0,16,129,211,196,206,193,2,1,0,1,8,106,105,104,97,17,3,21,19,17,16,15,14,13,11,9,6,5,4,0,1,22,36,54,57,61,62,65,73,85,108,115,120,119,116,115,111,110,109,105,104,103,102,101,100,97,17,13,24,0,0,0,0,0,0,0,195,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,6,6,194,144,40,26,71,36,169,44,153,166,243,132,162,210,148,170,90,87,44,171,113,185,175,23,6,199,98,153,60,155,105,116,173,182,217,183,27,135,103,94,0,0,0,0,0,0,0,130,128,0,0,0,0,128,9,129,1,0,0,0,128,14,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,52,56,55,52,51,53,56,55,49,125,85,0,0,0,57,5,0,0],\"0b9de1f30a4547939f0834af66fdc501.store\":[47,0,0,0,48,174,130,0,1,0,208,140,70,114,97,110,107,101,110,115,116,101,105,110,17,0,240,8,0,149,84,104,101,32,77,111,100,101,114,110,32,80,114,111,109,101,116,104,101,117,115,129,133,129,128,128,129,179,51,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,50,55,57,57,53,49,54,54,52,55,125,86,0,0,0,57,5,0,0],\"0b9de1f30a4547939f0834af66fdc501.pos\":[128,128,128,131,128,132,128,130,128,137,128,141,128,155,141,128,152,128,161,128,139,128,170,128,163,128,135,128,142,128,149,128,157,128,150,128,136,128,145,128,132,128,153,128,151,128,171,128,169,128,159,128,156,134,132,137,128,134,128,140,153,137,128,146,128,130,128,164,128,173,128,148,128,158,128,133,128,138,162,128,131,157,128,176,128,167,128,143,128,129,128,147,128,154,128,128,144,130,128,0,0,0,0,128,136,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,55,57,49,52,51,48,57,55,50,125,85,0,0,0,57,5,0,0],\"4c5c97317b00479497134c4f70f1da96.pos\":[128,130,128,131,128,129,128,128,128,128,128,144,131,167,145,146,135,128,231,128,143,128,166,128,229,128,190,128,208,128,139,128,181,128,215,128,146,128,137,128,206,128,129,128,220,128,179,128,154,128,202,128,188,128,178,128,148,184,128,156,128,142,128,138,153,174,128,151,174,128,155,128,213,128,212,128,227,128,198,128,211,128,130,128,224,128,189,128,169,128,132,170,170,128,171,148,128,172,128,159,201,128,170,192,128,167,128,226,128,136,168,128,187,128,145,128,219,128,135,128,162,128,173,149,128,157,128,180,128,133,128,131,128,207,128,185,128,165,128,222,128,230,128,134,135,136,139,132,132,135,130,135,136,131,147,131,144,128,210,128,140,171,128,153,128,200,128,158,128,182,128,193,128,152,128,150,174,128,225,128,201,128,218,128,199,134,146,128,161,130,128,0,0,0,0,128,136,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,50,54,48,50,49,50,54,56,50,125,85,0,0,0,57,5,0,0],\"0b9de1f30a4547939f0834af66fdc501.fieldnorm\":[4,44,130,128,0,0,0,0,128,129,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,49,55,56,50,56,49,52,57,49,50,125,86,0,0,0,57,5,0,0],\".tantivy-writer.lock\":[],\"ac92a3a0447f46c1a33c8dd4dec431b0.fast\":[128,1,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,52,56,48,55,53,54,52,53,56,125,86,0,0,0,57,5,0,0],\"4c5c97317b00479497134c4f70f1da96.fast\":[128,1,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,52,56,48,55,53,54,52,53,56,125,86,0,0,0,57,5,0,0],\"0b9de1f30a4547939f0834af66fdc501.fast\":[128,1,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,52,56,48,55,53,54,52,53,56,125,86,0,0,0,57,5,0,0],\"4c5c97317b00479497134c4f70f1da96.store\":[23,0,0,0,48,150,129,0,1,0,240,1,143,79,102,32,77,105,99,101,32,97,110,100,32,77,101,110,129,133,129,128,128,129,156,28,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,48,49,48,54,49,48,54,57,52,125,86,0,0,0,57,5,0,0],\"4c5c97317b00479497134c4f70f1da96.idx\":[4,0,0,0,0,0,0,0,128,129,128,129,128,129,128,129,107,0,0,0,0,0,0,0,128,129,128,134,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,130,128,129,128,129,128,131,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,131,128,130,128,129,128,130,128,130,128,129,128,129,128,130,128,129,128,129,128,129,128,129,128,129,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,142,128,129,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,130,128,129,128,129,128,129,128,131,128,129,130,128,0,0,0,0,128,144,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,49,48,55,57,52,50,55,51,57,55,125,86,0,0,0,57,5,0,0],\"ac92a3a0447f46c1a33c8dd4dec431b0.pos\":[128,131,128,130,128,129,128,133,128,128,132,128,137,144,128,135,128,130,128,143,128,149,128,147,128,154,128,134,128,148,128,146,128,141,128,145,128,128,144,128,136,131,128,132,128,150,128,131,128,138,128,142,128,152,128,140,128,129,128,133,128,151,130,128,0,0,0,0,128,139,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,57,49,51,53,49,49,52,51,52,125,86,0,0,0,57,5,0,0],\"0b9de1f30a4547939f0834af66fdc501.idx\":[4,0,0,0,0,0,0,0,128,129,128,129,128,129,128,129,49,0,0,0,0,0,0,0,128,129,128,129,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,132,128,129,128,131,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,130,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,130,130,128,0,0,0,0,128,144,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,49,56,49,48,57,50,49,57,54,54,125,86,0,0,0,57,5,0,0],\"meta.json\":[123,10,32,32,34,105,110,100,101,120,95,115,101,116,116,105,110,103,115,34,58,32,123,10,32,32,32,32,34,100,111,99,115,116,111,114,101,95,99,111,109,112,114,101,115,115,105,111,110,34,58,32,34,108,122,52,34,10,32,32,125,44,10,32,32,34,115,101,103,109,101,110,116,115,34,58,32,91,10,32,32,32,32,123,10,32,32,32,32,32,32,34,115,101,103,109,101,110,116,95,105,100,34,58,32,34,48,98,57,100,101,49,102,51,45,48,97,52,53,45,52,55,57,51,45,57,102,48,56,45,51,52,97,102,54,54,102,100,99,53,48,49,34,44,10,32,32,32,32,32,32,34,109,97,120,95,100,111,99,34,58,32,49,44,10,32,32,32,32,32,32,34,100,101,108,101,116,101,115,34,58,32,110,117,108,108,10,32,32,32,32,125,44,10,32,32,32,32,123,10,32,32,32,32,32,32,34,115,101,103,109,101,110,116,95,105,100,34,58,32,34,52,99,53,99,57,55,51,49,45,55,98,48,48,45,52,55,57,52,45,57,55,49,51,45,52,99,52,102,55,48,102,49,100,97,57,54,34,44,10,32,32,32,32,32,32,34,109,97,120,95,100,111,99,34,58,32,49,44,10,32,32,32,32,32,32,34,100,101,108,101,116,101,115,34,58,32,110,117,108,108,10,32,32,32,32,125,44,10,32,32,32,32,123,10,32,32,32,32,32,32,34,115,101,103,109,101,110,116,95,105,100,34,58,32,34,97,99,57,50,97,51,97,48,45,52,52,55,102,45,52,54,99,49,45,97,51,51,99,45,56,100,100,52,100,101,99,52,51,49,98,48,34,44,10,32,32,32,32,32,32,34,109,97,120,95,100,111,99,34,58,32,49,44,10,32,32,32,32,32,32,34,100,101,108,101,116,101,115,34,58,32,110,117,108,108,10,32,32,32,32,125,10,32,32,93,44,10,32,32,34,115,99,104,101,109,97,34,58,32,91,10,32,32,32,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,116,105,116,108,101,34,44,10,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,116,101,120,116,34,44,10,32,32,32,32,32,32,34,111,112,116,105,111,110,115,34,58,32,123,10,32,32,32,32,32,32,32,32,34,105,110,100,101,120,105,110,103,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,114,101,99,111,114,100,34,58,32,34,112,111,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,32,32,34,116,111,107,101,110,105,122,101,114,34,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,115,116,111,114,101,100,34,58,32,116,114,117,101,10,32,32,32,32,32,32,125,10,32,32,32,32,125,44,10,32,32,32,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,98,111,100,121,34,44,10,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,116,101,120,116,34,44,10,32,32,32,32,32,32,34,111,112,116,105,111,110,115,34,58,32,123,10,32,32,32,32,32,32,32,32,34,105,110,100,101,120,105,110,103,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,114,101,99,111,114,100,34,58,32,34,112,111,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,32,32,34,116,111,107,101,110,105,122,101,114,34,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,115,116,111,114,101,100,34,58,32,102,97,108,115,101,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,93,44,10,32,32,34,111,112,115,116,97,109,112,34,58,32,54,10,125,10],\"4c5c97317b00479497134c4f70f1da96.fieldnorm\":[4,58,130,128,0,0,0,0,128,129,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,49,50,53,49,55,54,56,52,49,51,125,86,0,0,0,57,5,0,0],\".managed.json\":[91,34,97,99,57,50,97,51,97,48,52,52,55,102,52,54,99,49,97,51,51,99,56,100,100,52,100,101,99,52,51,49,98,48,46,102,105,101,108,100,110,111,114,109,34,44,34,97,99,57,50,97,51,97,48,52,52,55,102,52,54,99,49,97,51,51,99,56,100,100,52,100,101,99,52,51,49,98,48,46,116,101,114,109,34,44,34,48,98,57,100,101,49,102,51,48,97,52,53,52,55,57,51,57,102,48,56,51,52,97,102,54,54,102,100,99,53,48,49,46,116,101,114,109,34,44,34,52,99,53,99,57,55,51,49,55,98,48,48,52,55,57,52,57,55,49,51,52,99,52,102,55,48,102,49,100,97,57,54,46,102,105,101,108,100,110,111,114,109,34,44,34,97,99,57,50,97,51,97,48,52,52,55,102,52,54,99,49,97,51,51,99,56,100,100,52,100,101,99,52,51,49,98,48,46,105,100,120,34,44,34,48,98,57,100,101,49,102,51,48,97,52,53,52,55,57,51,57,102,48,56,51,52,97,102,54,54,102,100,99,53,48,49,46,112,111,115,34,44,34,48,98,57,100,101,49,102,51,48,97,52,53,52,55,57,51,57,102,48,56,51,52,97,102,54,54,102,100,99,53,48,49,46,102,97,115,116,34,44,34,109,101,116,97,46,106,115,111,110,34,44,34,52,99,53,99,57,55,51,49,55,98,48,48,52,55,57,52,57,55,49,51,52,99,52,102,55,48,102,49,100,97,57,54,46,116,101,114,109,34,44,34,48,98,57,100,101,49,102,51,48,97,52,53,52,55,57,51,57,102,48,56,51,52,97,102,54,54,102,100,99,53,48,49,46,115,116,111,114,101,34,44,34,52,99,53,99,57,55,51,49,55,98,48,48,52,55,57,52,57,55,49,51,52,99,52,102,55,48,102,49,100,97,57,54,46,115,116,111,114,101,34,44,34,97,99,57,50,97,51,97,48,52,52,55,102,52,54,99,49,97,51,51,99,56,100,100,52,100,101,99,52,51,49,98,48,46,112,111,115,34,44,34,52,99,53,99,57,55,51,49,55,98,48,48,52,55,57,52,57,55,49,51,52,99,52,102,55,48,102,49,100,97,57,54,46,112,111,115,34,44,34,52,99,53,99,57,55,51,49,55,98,48,48,52,55,57,52,57,55,49,51,52,99,52,102,55,48,102,49,100,97,57,54,46,102,97,115,116,34,44,34,52,99,53,99,57,55,51,49,55,98,48,48,52,55,57,52,57,55,49,51,52,99,52,102,55,48,102,49,100,97,57,54,46,105,100,120,34,44,34,48,98,57,100,101,49,102,51,48,97,52,53,52,55,57,51,57,102,48,56,51,52,97,102,54,54,102,100,99,53,48,49,46,105,100,120,34,44,34,48,98,57,100,101,49,102,51,48,97,52,53,52,55,57,51,57,102,48,56,51,52,97,102,54,54,102,100,99,53,48,49,46,102,105,101,108,100,110,111,114,109,34,44,34,97,99,57,50,97,51,97,48,52,52,55,102,52,54,99,49,97,51,51,99,56,100,100,52,100,101,99,52,51,49,98,48,46,115,116,111,114,101,34,44,34,97,99,57,50,97,51,97,48,52,52,55,102,52,54,99,49,97,51,51,99,56,100,100,52,100,101,99,52,51,49,98,48,46,102,97,115,116,34,93,10],\"ac92a3a0447f46c1a33c8dd4dec431b0.fieldnorm\":[6,27,130,128,0,0,0,0,128,129,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,50,51,53,50,55,55,49,49,57,55,125,86,0,0,0,57,5,0,0],\"0b9de1f30a4547939f0834af66fdc501.term\":[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,139,200,194,193,198,203,194,231,203,197,199,11,16,135,194,210,196,0,16,134,211,194,206,193,194,208,196,199,0,16,130,206,3,2,1,0,1,5,16,22,116,112,109,102,17,4,4,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,4,34,137,154,69,4,60,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,146,194,200,203,197,201,208,196,202,0,1,0,100,17,65,14,16,162,200,199,0,16,130,199,211,198,4,3,1,0,1,7,12,18,115,114,110,99,17,4,0,16,129,203,194,208,194,202,203,194,208,29,16,138,203,194,210,200,219,1,0,1,9,110,109,17,2,196,0,16,135,197,2,16,130,193,198,197,198,1,0,1,8,105,101,17,2,65,16,134,200,199,201,199,194,193,0,16,143,200,1,0,1,5,118,110,17,2,66,16,134,199,0,16,134,215,203,200,210,196,218,194,199,1,0,1,12,111,105,17,2,1,0,109,0,118,115,17,2,1,0,117,69,114,97,17,2,2,0,1,9,101,97,17,2,0,16,151,203,200,198,197,194,199,0,1,1,99,17,65,0,3,1,0,1,115,110,17,66,0,16,157,0,16,132,0,16,155,187,16,146,199,197,140,16,136,196,1,0,1,5,106,103,17,2,194,92,16,134,194,1,0,0,1,104,99,17,2,202,1,0,1,143,117,105,17,2,0,16,167,198,1,0,0,189,101,97,17,2,3,1,0,0,1,9,111,104,97,17,3,91,16,167,197,193,199,194,210,203,236,16,133,219,207,0,16,142,202,200,1,0,3,171,116,108,17,2,2,1,0,1,9,14,105,104,101,17,3,107,16,133,210,199,194,193,198,0,16,147,1,0,1,4,111,101,17,2,38,34,33,29,26,24,23,22,21,17,13,11,9,7,5,0,1,0,20,0,49,0,58,0,81,0,102,0,120,0,123,0,126,0,129,0,153,0,177,0,200,0,221,0,240,0,12,1,121,119,117,116,115,114,111,110,109,105,104,102,101,100,99,97,33,16,40,0,0,0,0,0,0,0,134,1,0,0,0,0,0,0,39,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,7,7,2,65,2,161,225,16,145,168,88,100,52,58,30,33,145,146,73,74,165,229,18,147,169,217,228,116,122,62,65,161,162,81,82,169,233,20,149,170,90,101,193,186,100,97,182,50,92,154,174,141,23,231,171,3,230,9,251,136,129,199,66,101,34,179,209,25,9,173,148,102,82,59,173,161,89,130,0,0,0,0,0,0,0,130,128,0,0,0,0,128,20,129,1,0,0,0,128,14,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,52,57,57,53,48,50,53,51,55,125,86,0,0,0,57,5,0,0],\"ac92a3a0447f46c1a33c8dd4dec431b0.store\":[31,0,0,0,48,158,129,0,1,0,240,9,151,84,104,101,32,79,108,100,32,77,97,110,32,97,110,100,32,116,104,101,32,83,101,97,129,133,129,128,128,129,164,36,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,49,51,51,55,52,51,54,56,57,50,125,86,0,0,0,57,5,0,0],\"4c5c97317b00479497134c4f70f1da96.term\":[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,146,203,0,16,139,0,16,130,202,1,0,1,5,105,101,17,2,0,16,155,3,1,0,1,4,19,111,109,97,17,3,4,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,4,34,137,154,69,4,60,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,146,0,16,142,202,0,2,1,1,5,114,110,17,66,0,16,167,203,0,16,130,199,196,219,0,16,134,194,206,202,203,197,0,16,129,3,2,1,0,1,4,12,18,117,114,101,97,17,4,0,16,151,203,200,221,199,199,37,16,134,196,41,16,162,199,2,1,0,1,5,9,117,108,97,17,3,50,16,136,199,0,16,137,1,0,1,4,101,98,17,2,65,16,137,196,2,0,1,5,114,101,17,2,0,16,157,199,194,226,0,16,140,59,16,146,196,196,0,16,143,207,200,206,193,1,0,0,1,114,111,17,2,129,16,134,194,4,2,1,0,1,5,20,25,114,111,108,101,17,4,0,16,139,197,207,200,218,5,16,130,210,207,3,16,130,2,1,0,1,4,9,114,111,97,17,3,156,16,146,200,198,207,207,1,0,1,157,105,97,17,2,2,1,0,0,0,0,116,115,110,17,3,175,16,135,211,193,202,203,211,0,16,155,197,188,16,154,217,16,130,1,0,1,4,110,109,17,2,0,16,135,194,204,3,1,0,1,6,20,111,105,101,17,3,217,16,143,28,16,143,193,225,16,139,200,197,193,203,1,0,1,8,117,116,17,2,1,0,1,20,111,105,17,2,163,16,132,199,199,197,0,1,0,101,17,65,3,1,0,55,1,0,118,110,102,17,3,178,16,132,196,248,16,142,202,15,1,32,139,194,218,208,211,1,0,1,9,99,97,17,2,90,16,162,219,16,167,202,4,3,2,0,75,1,5,8,117,111,105,101,17,4,60,1,32,133,203,200,66,1,32,146,1,0,1,5,110,108,17,2,141,16,137,201,81,1,32,137,1,0,1,5,111,105,17,2,120,1,32,133,210,194,123,1,32,129,1,0,1,5,117,108,17,2,85,1,32,135,90,1,32,132,199,113,1,32,142,215,200,207,203,207,16,132,208,197,202,0,11,10,9,8,6,4,3,1,1,7,15,20,24,42,239,58,121,117,116,112,111,108,105,97,17,72,0,1,214,105,17,65,1,0,1,0,160,1,101,97,33,2,0,1,0,111,17,65,183,1,32,130,161,1,32,143,231,203,200,6,5,3,0,1,8,12,18,119,114,111,104,17,4,130,1,32,130,207,207,197,0,16,144,1,0,14,1,1,0,116,114,33,2,235,1,32,129,200,234,1,32,140,196,207,35,1,32,129,2,1,0,11,2,1,0,5,0,116,110,108,33,3,3,2,0,1,25,30,105,104,97,17,3,19,1,32,143,207,194,73,67,66,65,58,46,41,40,36,35,32,28,27,24,22,19,14,13,10,7,3,0,1,0,7,0,60,0,219,1,67,0,114,0,216,0,1,1,5,1,22,1,28,1,58,1,92,1,100,1,111,1,126,1,152,1,193,1,199,1,226,1,253,1,32,2,121,119,118,117,116,115,114,112,111,110,109,108,106,105,104,103,102,101,100,99,98,97,33,22,74,0,0,0,0,0,0,0,152,2,0,0,0,0,0,0,39,0,0,0,0,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,8,8,2,2,9,18,26,44,68,104,168,240,144,33,162,195,68,136,138,18,23,41,50,90,108,196,232,168,241,145,35,164,199,72,144,146,34,39,73,82,154,172,68,105,169,242,146,69,166,11,77,24,155,50,58,105,122,218,252,196,9,170,51,148,167,168,207,81,160,164,66,75,137,154,26,61,69,138,170,84,149,9,171,147,86,168,174,82,96,169,196,90,145,197,58,171,149,150,107,173,87,91,176,183,98,113,201,232,154,217,69,195,171,166,151,141,175,155,95,56,192,114,130,233,8,219,25,198,171,172,119,153,79,179,31,103,64,207,130,160,9,69,27,146,70,52,173,152,154,113,181,99,107,200,215,146,179,41,107,1,213,0,0,0,0,0,0,0,130,128,0,0,0,0,128,5,129,1,0,0,0,128,14,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,50,54,55,51,52,54,53,52,56,57,125,86,0,0,0,57,5,0,0],\"ac92a3a0447f46c1a33c8dd4dec431b0.idx\":[6,0,0,0,0,0,0,0,128,129,128,129,128,129,128,129,128,130,27,0,0,0,0,0,0,0,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,130,128,130,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,130,128,0,0,0,0,128,146,1,0,0,0,128,13,0,0,0,123,34,118,101,114,115,105,111,110,34,58,123,34,109,97,106,111,114,34,58,48,44,34,109,105,110,111,114,34,58,49,54,44,34,112,97,116,99,104,34,58,49,44,34,105,110,100,101,120,95,102,111,114,109,97,116,95,118,101,114,115,105,111,110,34,58,52,125,44,34,99,114,99,34,58,51,48,50,48,57,51,49,50,49,57,125,86,0,0,0,57,5,0,0]}";

    let deserialized_directory: HashMapDirectory = serde_json::from_str(&serialized_directory).unwrap();

    let index = Index::builder().schema(schema.clone()).open_or_create(deserialized_directory).unwrap();


    // If `.commit()` returns correctly, then all of the
    // documents that have been added are guaranteed to be
    // persistently indexed.
    //
    // In the scenario of a crash or a power failure,
    // tantivy behaves as if it has rolled back to its last
    // commit.

    // # Searching
    //
    // ### Searcher
    //
    // A reader is required first in order to search an index.
    // It acts as a `Searcher` pool that reloads itself,
    // depending on a `ReloadPolicy`.
    //
    // For a search server you will typically create one reader for the entire lifetime of your
    // program, and acquire a new searcher for every single request.
    //
    // In the code below, we rely on the 'ON_COMMIT' policy: the reader
    // will reload the index automatically after each commit.
    let reader = index
        .reader_builder()
        .reload_policy(ReloadPolicy::OnCommit)
        .try_into()?;

    // We now need to acquire a searcher.
    //
    // A searcher points to a snapshotted, immutable version of the index.
    //
    // Some search experience might require more than
    // one query. Using the same searcher ensures that all of these queries will run on the
    // same version of the index.
    //
    // Acquiring a `searcher` is very cheap.
    //
    // You should acquire a searcher every time you start processing a request and
    // and release it right after your query is finished.
    let searcher = reader.searcher();

    // ### Query

    // The query parser can interpret human queries.
    // Here, if the user does not specify which
    // field they want to search, tantivy will search
    // in both title and body.
    let query_parser = QueryParser::for_index(&index, vec![title, body]);

    // `QueryParser` may fail if the query is not in the right
    // format. For user facing applications, this can be a problem.
    // A ticket has been opened regarding this problem.
    let query = query_parser.parse_query("sea whale")?;

    // A query defines a set of documents, as
    // well as the way they should be scored.
    //
    // A query created by the query parser is scored according
    // to a metric called Tf-Idf, and will consider
    // any document matching at least one of our terms.

    // ### Collectors
    //
    // We are not interested in all of the documents but
    // only in the top 10. Keeping track of our top 10 best documents
    // is the role of the `TopDocs` collector.

    // We can now perform our query.
    let top_docs = searcher.search(&query, &TopDocs::with_limit(10))?;

    // The actual documents still need to be
    // retrieved from Tantivy's store.
    //
    // Since the body field was not configured as stored,
    // the document returned will only contain
    // a title.
    for (_score, doc_address) in top_docs {
        let retrieved_doc = searcher.doc(doc_address)?;
        println!("{}", schema.to_json(&retrieved_doc));
    }

    Ok(())
}
